Fitting 4 folds for each of 10 candidates, totalling 40 fits
[CV 1/4] END .n_neighbors=1;, score=(train=1.000, test=0.923) total time=   0.6s
[CV 2/4] END .n_neighbors=1;, score=(train=1.000, test=0.937) total time=   0.6s
[CV 4/4] END .n_neighbors=1;, score=(train=1.000, test=0.930) total time=   0.6s
[CV 2/4] END .n_neighbors=2;, score=(train=0.959, test=0.929) total time=   0.7s
[CV 3/4] END .n_neighbors=2;, score=(train=0.962, test=0.919) total time=   0.7s
[CV 4/4] END .n_neighbors=3;, score=(train=0.966, test=0.929) total time=   0.7s
[CV 1/4] END .n_neighbors=3;, score=(train=0.965, test=0.918) total time=   0.6s
[CV 4/4] END .n_neighbors=2;, score=(train=0.963, test=0.911) total time=   0.6s
[CV 3/4] END .n_neighbors=3;, score=(train=0.966, test=0.933) total time=   0.7s
[CV 2/4] END .n_neighbors=3;, score=(train=0.963, test=0.932) total time=   0.7s
[CV 3/4] END .n_neighbors=1;, score=(train=1.000, test=0.937) total time=   0.8s
[CV 1/4] END .n_neighbors=2;, score=(train=0.963, test=0.909) total time=   0.7s
[CV 2/4] END .n_neighbors=5;, score=(train=0.953, test=0.931) total time=   0.5s
[CV 4/4] END .n_neighbors=4;, score=(train=0.957, test=0.921) total time=   0.6s
[CV 3/4] END .n_neighbors=4;, score=(train=0.957, test=0.926) total time=   0.7s
[CV 1/4] END .n_neighbors=4;, score=(train=0.957, test=0.913) total time=   0.6s
[CV 2/4] END .n_neighbors=6;, score=(train=0.948, test=0.926) total time=   0.6s
[CV 1/4] END .n_neighbors=5;, score=(train=0.957, test=0.916) total time=   0.7s
[CV 2/4] END .n_neighbors=4;, score=(train=0.954, test=0.932) total time=   0.6s
[CV 4/4] END .n_neighbors=5;, score=(train=0.954, test=0.930) total time=   0.6s
[CV 1/4] END .n_neighbors=6;, score=(train=0.951, test=0.914) total time=   0.6s
[CV 3/4] END .n_neighbors=5;, score=(train=0.953, test=0.930) total time=   0.6s
[CV 3/4] END .n_neighbors=6;, score=(train=0.949, test=0.930) total time=   0.7s
[CV 4/4] END .n_neighbors=6;, score=(train=0.949, test=0.923) total time=   0.7s
[CV 1/4] END .n_neighbors=7;, score=(train=0.945, test=0.914) total time=   0.6s
[CV 2/4] END .n_neighbors=7;, score=(train=0.943, test=0.926) total time=   0.6s
[CV 1/4] END .n_neighbors=8;, score=(train=0.942, test=0.913) total time=   0.6s
[CV 3/4] END .n_neighbors=7;, score=(train=0.949, test=0.926) total time=   0.6s
[CV 1/4] END .n_neighbors=9;, score=(train=0.942, test=0.911) total time=   0.5s
[CV 3/4] END .n_neighbors=8;, score=(train=0.941, test=0.928) total time=   0.6s
[CV 2/4] END .n_neighbors=8;, score=(train=0.940, test=0.927) total time=   0.6s
[CV 4/4] END .n_neighbors=8;, score=(train=0.943, test=0.923) total time=   0.6s
[CV 4/4] END .n_neighbors=7;, score=(train=0.946, test=0.924) total time=   0.8s
[CV 2/4] END .n_neighbors=9;, score=(train=0.938, test=0.923) total time=   0.6s
[CV 3/4] END .n_neighbors=9;, score=(train=0.939, test=0.924) total time=   0.6s
[CV 4/4] END .n_neighbors=9;, score=(train=0.940, test=0.923) total time=   0.6s
[CV 1/4] END n_neighbors=10;, score=(train=0.938, test=0.908) total time=   0.5s
[CV 2/4] END n_neighbors=10;, score=(train=0.936, test=0.920) total time=   0.5s
[CV 3/4] END n_neighbors=10;, score=(train=0.936, test=0.927) total time=   0.4s
[CV 4/4] END n_neighbors=10;, score=(train=0.935, test=0.922) total time=   0.4s
